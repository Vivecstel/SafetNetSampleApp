apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools
    defaultConfig {
        applicationId versions.applicationId
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    String safetyNetApiKey = "";
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
    if (properties.containsKey("ANDROID_VERIFICATION_API_KEY")) {
        safetyNetApiKey = properties.getProperty("ANDROID_VERIFICATION_API_KEY")
    }

    buildTypes {
        release {
            buildConfigField("String", "ANDROID_VERIFICATION_API_KEY", "\"" + safetyNetApiKey + "\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField("String", "ANDROID_VERIFICATION_API_KEY", "\"" + safetyNetApiKey + "\"")
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile(libraries.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile libraries.junit
    compile libraries.supportAppCompat
    compile libraries.supportDesign
    compile libraries.playServicesSafetNet
    compile libraries.gson
    compile libraries.priorityJobQueue
    compile libraries.eventBus
    apt libraries.eventBusProcessor
    compile libraries.okhttp
    compile libraries.butterknife
    apt libraries.butterknifeCompiler
    compile libraries.fragmentargs
    apt libraries.fragmentargsProcessor
    compile libraries.safetynethelper
}

apt {
    arguments {
        eventBusIndex eventBusIndex
    }
}